services:
  postgres:
    image: postgres:latest
    container_name: hubpkt-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hubpkt
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: hubpkt-server
    ports:
      - "4001:4001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/hubpkt
      - STORAGE_BASE_PATH=/app/uploads
      - NGINX_BASE_URL=http://localhost:8080
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
      # Mount uploads directory for persistent file storage
      - uploads-data:/app/uploads
    depends_on:
      - postgres
    networks:
      - app-network
    command: sh -c "npm run prisma:generate && npm run prisma:migrate:deploy && npm run dev"

  # nginx service for serving static files
  nginx:
    image: nginx:alpine
    container_name: hubpkt-nginx
    ports:
      - "8080:80"
    volumes:
      # Mount the same uploads volume to serve files
      - uploads-data:/usr/share/nginx/html
      # Mount custom nginx config
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server
    networks:
      - app-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - VITE_API_URL=http://localhost:5173
    depends_on:
      - server
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: hubpkt-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
  uploads-data:  # New volume for persistent file storage